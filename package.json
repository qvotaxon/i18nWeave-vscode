{
  "name": "i18nweave",
  "displayName": "i18nWeave",
  "description": "Developer's i18n Companion",
  "icon": "static/logo-128x128.png",
  "publisher": "qvotaxon",
  "homepage": "https://i18nweave.com",
  "license": "SEE LICENSE IN LICENSE.txt",
  "repository": {
    "type": "git",
    "url": "https://github.com/qvotaxon/i18nWeave-vscode"
  },
  "version": "0.15.10",
  "engines": {
    "vscode": "^1.89.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "i18n",
    "translation",
    "json",
    "po",
    "deepl",
    "watcher"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "badges": [
    {
      "url": "https://codecov.io/github/qvotaxon/i18nWeave-vscode/graph/badge.svg?token=GJVSSQ0WRS",
      "href": "https://codecov.io/github/qvotaxon/i18nWeave-vscode",
      "description": "codecov"
    },
    {
      "url": "https://img.shields.io/github/contributors/qvotaxon/i18nweave-vscode?logo=github&branch=main",
      "href": "https://github.com/qvotaxon/i18nweave-vscode/graphs/contributors",
      "description": "Contributors"
    },
    {
      "url": "https://img.shields.io/github/license/qvotaxon/i18nweave-vscode?logo=github",
      "href": "https://github.com/qvotaxon/i18nweave-vscode/blob/main/LICENSE",
      "description": "License"
    }
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "i18nWeave.launchConfigurationWizard",
        "title": "Configure i18nWeave"
      }
    ],
    "configuration": [
      {
        "id": "translationModule",
        "title": "Translation Module",
        "properties": {
          "i18nWeave.translationModule.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable the translation module."
          },
          "i18nWeave.translationModule.googleTranslate.enabled": {
            "type": "boolean",
            "default": "",
            "description": "Enable translation using googleTranslate."
          },
          "i18nWeave.translationModule.deepL.enabled": {
            "type": "boolean",
            "default": "",
            "description": "Enable translation using DeepL."
          },
          "i18nWeave.translationModule.deepL.apiKey": {
            "type": "string",
            "default": "",
            "description": "Your deepLApiKey."
          },
          "i18nWeave.translationModule.deepL.preserveFormatting": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Preserve formatting in translations. This will prevent DeepL from changing the formatting of the translation. This is useful for translations that contain code or other formatting that should not be changed."
          },
          "i18nWeave.translationModule.deepL.formality": {
            "type": "string",
            "default": "default",
            "enum": [
              "default",
              "more",
              "less",
              "prefer_more",
              "prefer_less"
            ],
            "enumDescriptions": [
              "The DeepL default",
              "For a more formal language",
              "For a more informal language",
              "For a more formal language if available, otherwise fallback to default formality",
              "For a more informal language if available, otherwise fallback to default formality"
            ],
            "description": "Specify the formality preference for translations."
          }
        }
      },
      {
        "id": "i18nextScannerModule",
        "title": "i18nextScanner Module",
        "properties": {
          "i18nWeave.i18nextScannerModule.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable the i18next-scanner module."
          },
          "i18nWeave.i18nextScannerModule.namespaces": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "common"
            ],
            "description": "List of namespaces for translation."
          },
          "i18nWeave.i18nextScannerModule.defaultNamespace": {
            "type": "string",
            "default": "common",
            "description": "Default namespace to use for translations."
          },
          "i18nWeave.i18nextScannerModule.codeFileLocations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "src"
            ],
            "description": "List of code file locations to scan."
          },
          "i18nWeave.i18nextScannerModule.translationFilesLocation": {
            "type": "string",
            "default": "src/i18n",
            "description": "Location of the translation files."
          },
          "i18nWeave.i18nextScannerModule.languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "en"
            ],
            "description": "Languages used by your application."
          },
          "i18nWeave.i18nextScannerModule.defaultLanguage": {
            "type": "string",
            "default": "en",
            "description": "Default language used by your application."
          },
          "i18nWeave.i18nextScannerModule.nsSeparator": {
            "type": "string",
            "default": ":",
            "description": "Namespace separator used in your application."
          },
          "i18nWeave.i18nextScannerModule.keySeparator": {
            "type": "string",
            "default": ".",
            "description": "Key separator used in your application."
          },
          "i18nWeave.i18nextScannerModule.pluralSeparator": {
            "type": "string",
            "default": "_",
            "description": "Plural separator used in your application."
          },
          "i18nWeave.i18nextScannerModule.contextSeparator": {
            "type": "string",
            "default": "_",
            "description": "Context separator used in your application."
          },
          "i18nWeave.i18nextScannerModule.translationFunctionNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "t",
              "i18next.t"
            ],
            "description": "Names of the translation functions used in your application."
          },
          "i18nWeave.i18nextScannerModule.translationComponentTranslationKey": {
            "type": "string",
            "default": "i18nKey",
            "description": "Names of the translation functions used in your application."
          },
          "i18nWeave.i18nextScannerModule.translationComponentName": {
            "type": "string",
            "default": "Trans",
            "description": "Name of the translation component used in your application."
          },
          "i18nWeave.i18nextScannerModule.fileExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              ".ts",
              ".tsx",
              ".js",
              ".jsx"
            ],
            "description": "File extensions to scan for translations."
          }
        }
      },
      {
        "id": "general",
        "title": "General",
        "properties": {
          "i18nWeave.format.numberOfSpacesForIndentation": {
            "type": "number",
            "default": 4,
            "description": "Define the number of spaces that will be used to indent the JSON files."
          },
          "i18nWeave.betaFeaturesConfiguration.enableJsonFileWebView": {
            "type": "boolean",
            "default": false,
            "description": "Enable the Json File Web View. This feature is still in beta and may not work as expected."
          },
          "i18nWeave.relativePathToProjectRoot": {
            "type": "string",
            "default": "",
            "markdownDescription": "Relative path to the project root. Example: `my-project\\frontend`\n\nThis path will be used to resolve relative paths in the i18next-scanner module.\nYou can use 'Copy Relative Path' from the context menu in the file explorer to copy the relative path to the clipboard."
          }
        }
      },
      {
        "id": "debugging",
        "title": "Debugging",
        "properties": {
          "i18nWeave.logging.enableVerboseLogging": {
            "type": "boolean",
            "default": false,
            "description": "Enable / disable verbose logging to the Output Panel."
          }
        }
      }
    ]
  },
  "scripts": {
    "new:lib": "node ./scripts/addTypedLib.js",
    "vscode:prepublish": "cross-env NODE_ENV=production npm run compile:prod",
    "compile:dev": "cross-env NODE_ENV=development tsc -p ./",
    "compile:prod": "cross-env NODE_ENV=production webpack --mode production",
    "compile:sourcemaps": "cross-env NODE_ENV=production webpack --mode production",
    "postcompile:dev": "cross-env NODE_ENV=development npm run copyfiles",
    "postcompile:prod": "cross-env NODE_ENV=production npm run copyfiles",
    "postcompile:sourcemaps": "npm run copyfiles && npm run sentry:sourcemaps",
    "watch": "cross-env NODE_ENV=development webpack --watch --mode development",
    "prewatch": "npm run copyfiles",
    "pretest": "cross-env NODE_ENV=development npm run copyfiles && tsc -p ./ && tsc-alias",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "test": "vscode-test",
    "package": "npx vsce package",
    "publish": "npm run compile:prod && npm run package",
    "test:coverage": "npm run test -- --coverage --coverage-reporter=clover",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org i18nweave --project i18nweave-vscode-r3 ./out && sentry-cli sourcemaps upload --org i18nweave --project i18nweave-vscode-r3 ./out",
    "copyfiles": "copyfiles -u 1 ./src/media/**/* out/",
    "pretty": "prettier --write \"./src/**/*.ts\""
  },
  "devDependencies": {
    "@codecov/webpack-plugin": "^1.4.0",
    "@trivago/prettier-plugin-sort-imports": "^4.3.0",
    "@types/babel__traverse": "^7.20.6",
    "@types/deep-diff": "^1.0.5",
    "@types/json-stable-stringify": "^1.0.36",
    "@types/mocha": "^10.0.6",
    "@types/mock-fs": "^4.13.4",
    "@types/node": "^18.19.64",
    "@types/sinon": "^17.0.3",
    "@types/vscode": "^1.89.0",
    "@typescript-eslint/eslint-plugin": "^7.7.1",
    "@typescript-eslint/parser": "^7.7.1",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.3.9",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "eslint": "^8.57.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-no-relative-import-paths": "^1.5.5",
    "eslint-plugin-unused-imports": "^4.1.4",
    "mock-fs": "^5.2.0",
    "prettier": "^3.3.1",
    "sinon": "^18.0.1",
    "ts-loader": "^9.5.1",
    "tsc-alias": "^1.8.10",
    "tsconfig-paths-webpack-plugin": "^4.1.0",
    "typescript": "^5.6.3",
    "webpack": "^5.94.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@babel/parser": "^7.26.2",
    "@babel/traverse": "^7.25.9",
    "@babel/types": "^7.26.0",
    "@sentry/cli": "^2.32.1",
    "@sentry/node": "^8.9.2",
    "@sentry/profiling-node": "^8.9.2",
    "@sentry/tracing": "^7.114.0",
    "@types/gulp-sort": "^2.0.4",
    "@types/lodash": "^4.17.13",
    "@types/vinyl-fs": "^3.0.5",
    "deep-diff": "^1.0.2",
    "deepl-node": "^1.13.0",
    "dotenv": "^16.4.5",
    "gulp-sort": "^2.0.0",
    "i18next-scanner": "^4.4.0",
    "inquirer": "^12.0.1",
    "json-stable-stringify": "^1.1.1",
    "jsonc-parser": "^3.3.1",
    "lodash": "^4.17.21",
    "vinyl-fs": "^4.0.0"
  }
}
